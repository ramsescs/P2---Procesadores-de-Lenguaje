
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BOOLEANO CARACTER CARACTERC CIERTO DEVOLVER ENTERO ENTONCES FALSO FINMIENTRAS FINPARRAFO FINSI FUNCION LONG MIENTRAS NAME NOT NUMINTEGER NUMREAL OPCOMPARE OR REAL REGISTRO SI SINO VECTORstatements : statement FINPARRAFO statements\n                      | expresion FINPARRAFO statements\n                      |\n                      statements1 : statement FINPARRAFO statements1\n                        |statement : asignacion\n                     | def_funcion\n                     | condicional\n                     | bucle\n                     | declaracion\n                     | declaracion_reg\n                     | declaracion_vec\n                     | declaracion : tipo NAME '=' expresion\n                       | tipo varios_name\n                       varios_name : NAME ',' varios_name\n                       | NAME tipo : ENTERO\n                | REAL\n                | BOOLEANO\n                | CARACTER\n                | NAMEdeclaracion_reg : REGISTRO NAME '{' blq_registro '}' blq_registro : tipo varios_name ';' FINPARRAFO blq_registro\n                        | tipo varios_name ';'\n                        | VECTOR tipo_vector NAME '[' NUMINTEGER ']' ';' FINPARRAFO blq_registro\n                        | VECTOR tipo_vector NAME '[' NUMINTEGER ']' ';' tipo_vector : ENTERO\n                        | REAL\n                        | BOOLEANO\n                        | CARACTERdeclaracion_vec : VECTOR tipo_vector NAME '[' NUMINTEGER ']' asignacion : name_chain '=' expresion\n                      | name_chain '[' expresion ']' '=' expresiondef_funcion : FUNCION NAME '(' lista_args ')' ':' tipo  FINPARRAFO '{' FINPARRAFO statements1 DEVOLVER expresion FINPARRAFO '}'  lista_args : tipo NAME ',' lista_args\n                      | tipo NAME\n                      |expresion : expresion OR expresion_and\n                     | expresion '|' expresion_and\n                     | expresion_andexpresion_and : expresion_and AND expresion_comp\n                         | expresion_and '&' expresion_comp\n                         | expresion_compexpresion_comp : expresion_comp OPCOMPARE expresion_add\n                          | expresion_addexpresion_add : expresion_mult '+' expresion_add\n                         | expresion_mult '-' expresion_add\n                         | expresion_multexpresion_mult : expresion_mult '*' factor  \n                          | expresion_mult '/' factor\n                          | factorfactor : '(' expresion ')'\n                  | valor\n                  | NAME '(' lista_expresiones ')'\n                  | operador_unario factor\n                  lista_expresiones : expresion ',' lista_expresiones\n                             | expresion\n                             |operador_unario : '-'\n                           | NOT\n                           | '!'\n                           | '+'\n                           valor : NUMREAL\n                 | NUMINTEGER\n                 | CIERTO\n                 | FALSO\n                 | CARACTERC\n                 | name_chain\n                 | name_chain '[' expresion ']'\n                 | name_chain '.' LONG condicional : SI expresion FINPARRAFO ENTONCES FINPARRAFO statements1 SINO FINPARRAFO statements1 FINSI\n                    | SI expresion FINPARRAFO ENTONCES FINPARRAFO statements1 FINSIbucle : MIENTRAS expresion statements1 FINMIENTRAS\n        name_chain : NAME\n                    | name_chain '.' NAME"
    
_lr_action_items = {'$end':([0,1,40,41,70,71,],[-3,0,-3,-3,-1,-2,]),'FINPARRAFO':([0,2,3,4,5,6,7,8,9,10,11,12,14,21,22,23,24,25,26,27,28,31,32,34,35,36,37,40,41,52,53,54,55,56,57,69,72,73,74,75,76,78,79,83,90,95,96,97,98,99,100,101,104,107,108,109,110,111,112,123,124,127,131,136,138,139,141,142,146,149,152,153,154,159,161,],[-13,40,41,-6,-7,-8,-9,-10,-11,-12,-41,-69,-75,-65,-44,-18,-19,-20,-21,-46,-49,-52,-54,-64,-66,-67,-68,-13,-13,-75,-69,-17,-15,88,-13,-56,-39,-40,-42,-43,-33,-76,-71,-53,112,-45,-47,-48,-50,-51,-70,-22,-55,-14,-17,-16,124,-74,-13,-70,-13,-23,-34,143,-32,145,146,-73,-13,152,-13,-72,156,160,-35,]),'FUNCION':([0,11,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,83,95,96,97,98,99,104,112,123,124,146,152,],[13,-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,13,13,-75,-69,13,-56,-39,-40,-42,-43,-76,-71,-53,-45,-47,-48,-50,-51,-55,13,-70,13,13,13,]),'SI':([0,11,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,83,95,96,97,98,99,104,112,123,124,146,152,],[17,-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,17,17,-75,-69,17,-56,-39,-40,-42,-43,-76,-71,-53,-45,-47,-48,-50,-51,-55,17,-70,17,17,17,]),'MIENTRAS':([0,11,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,83,95,96,97,98,99,104,112,123,124,146,152,],[18,-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,18,18,-75,-69,18,-56,-39,-40,-42,-43,-76,-71,-53,-45,-47,-48,-50,-51,-55,18,-70,18,18,18,]),'REGISTRO':([0,11,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,83,95,96,97,98,99,104,112,123,124,146,152,],[19,-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,19,19,-75,-69,19,-56,-39,-40,-42,-43,-76,-71,-53,-45,-47,-48,-50,-51,-55,19,-70,19,19,19,]),'VECTOR':([0,11,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,83,93,95,96,97,98,99,104,112,123,124,143,146,152,156,],[20,-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,20,20,-75,-69,20,-56,-39,-40,-42,-43,-76,-71,-53,117,-45,-47,-48,-50,-51,-55,20,-70,20,117,20,20,117,]),'NAME':([0,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,78,79,80,83,84,85,86,87,92,93,95,96,97,98,99,101,103,104,105,112,113,114,116,119,123,124,129,132,133,143,146,152,156,157,],[14,-41,49,-22,52,54,52,52,58,-65,-44,-18,-19,-20,-21,-46,-49,-63,-60,-52,-54,52,-64,-66,-67,-68,-61,-62,14,14,52,52,52,52,52,52,78,52,-75,-69,92,94,-28,-29,-30,-31,52,52,52,52,52,-56,-39,-40,-42,-43,-76,-71,101,-53,52,78,52,108,-22,101,-45,-47,-48,-50,-51,-22,121,-55,52,92,52,78,108,52,-70,92,137,101,101,101,92,92,101,52,]),'ENTERO':([0,11,20,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,80,83,93,95,96,97,98,99,104,112,117,123,124,132,133,143,146,152,156,],[23,-41,60,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,23,23,-75,-69,23,-56,-39,-40,-42,-43,-76,-71,23,-53,23,-45,-47,-48,-50,-51,-55,23,60,-70,23,23,23,23,23,23,23,]),'REAL':([0,11,20,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,80,83,93,95,96,97,98,99,104,112,117,123,124,132,133,143,146,152,156,],[24,-41,61,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,24,24,-75,-69,24,-56,-39,-40,-42,-43,-76,-71,24,-53,24,-45,-47,-48,-50,-51,-55,24,61,-70,24,24,24,24,24,24,24,]),'BOOLEANO':([0,11,20,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,80,83,93,95,96,97,98,99,104,112,117,123,124,132,133,143,146,152,156,],[25,-41,62,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,25,25,-75,-69,25,-56,-39,-40,-42,-43,-76,-71,25,-53,25,-45,-47,-48,-50,-51,-55,25,62,-70,25,25,25,25,25,25,25,]),'CARACTER':([0,11,20,21,22,27,28,31,32,34,35,36,37,40,41,52,53,57,69,72,73,74,75,78,79,80,83,93,95,96,97,98,99,104,112,117,123,124,132,133,143,146,152,156,],[26,-41,63,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,26,26,-75,-69,26,-56,-39,-40,-42,-43,-76,-71,26,-53,26,-45,-47,-48,-50,-51,-55,26,63,-70,26,26,26,26,26,26,26,]),'(':([0,14,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,49,50,52,64,65,66,67,68,84,86,105,113,119,157,],[15,50,15,15,15,-63,-60,15,-61,-62,15,15,15,15,15,15,15,15,80,15,50,15,15,15,15,15,15,15,15,15,15,15,]),'NUMREAL':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[34,34,34,34,-63,-60,34,-61,-62,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'NUMINTEGER':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,118,119,144,157,],[21,21,21,21,-63,-60,21,-61,-62,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,130,21,148,21,]),'CIERTO':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[35,35,35,35,-63,-60,35,-61,-62,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FALSO':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[36,36,36,36,-63,-60,36,-61,-62,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'CARACTERC':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[37,37,37,37,-63,-60,37,-61,-62,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'-':([0,12,14,15,17,18,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,52,53,64,65,66,67,68,69,78,79,83,84,86,98,99,100,104,105,113,119,123,157,],[30,-69,-75,30,30,30,-65,66,-63,-60,-52,-54,30,-64,-66,-67,-68,-61,-62,30,30,30,30,30,30,30,30,30,-75,-69,30,30,30,30,30,-56,-76,-71,-53,30,30,-50,-51,-70,-55,30,30,30,-70,30,]),'NOT':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[38,38,38,38,-63,-60,38,-61,-62,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'!':([0,15,17,18,29,30,33,38,39,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[39,39,39,39,-63,-60,39,-61,-62,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'+':([0,12,14,15,17,18,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,52,53,64,65,66,67,68,69,78,79,83,84,86,98,99,100,104,105,113,119,123,157,],[29,-69,-75,29,29,29,-65,65,-63,-60,-52,-54,29,-64,-66,-67,-68,-61,-62,29,29,29,29,29,29,29,29,29,-75,-69,29,29,29,29,29,-56,-76,-71,-53,29,29,-50,-51,-70,-55,29,29,29,-70,29,]),'OR':([3,11,12,14,21,22,27,28,31,32,34,35,36,37,51,52,53,56,57,69,72,73,74,75,76,77,78,79,82,83,95,96,97,98,99,100,104,106,107,123,126,131,159,],[42,-41,-69,-75,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,42,-75,-69,42,42,-56,-39,-40,-42,-43,42,42,-76,-71,42,-53,-45,-47,-48,-50,-51,-70,-55,42,42,-70,42,42,42,]),'|':([3,11,12,14,21,22,27,28,31,32,34,35,36,37,51,52,53,56,57,69,72,73,74,75,76,77,78,79,82,83,95,96,97,98,99,100,104,106,107,123,126,131,159,],[43,-41,-69,-75,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,43,-75,-69,43,43,-56,-39,-40,-42,-43,43,43,-76,-71,43,-53,-45,-47,-48,-50,-51,-70,-55,43,43,-70,43,43,43,]),')':([11,21,22,27,28,31,32,34,35,36,37,50,51,52,53,69,72,73,74,75,78,79,80,81,82,83,95,96,97,98,99,102,104,105,121,122,123,133,140,],[-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,-59,83,-75,-69,-56,-39,-40,-42,-43,-76,-71,-38,104,-58,-53,-45,-47,-48,-50,-51,120,-55,-59,-37,-57,-70,-38,-36,]),'FINMIENTRAS':([11,21,22,27,28,31,32,34,35,36,37,52,53,57,69,72,73,74,75,78,79,83,89,95,96,97,98,99,104,112,123,125,],[-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,-75,-69,-5,-56,-39,-40,-42,-43,-76,-71,-53,111,-45,-47,-48,-50,-51,-55,-5,-70,-4,]),']':([11,21,22,27,28,31,32,34,35,36,37,52,53,69,72,73,74,75,77,78,79,83,95,96,97,98,99,104,106,123,126,130,148,],[-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,-75,-69,-56,-39,-40,-42,-43,100,-76,-71,-53,-45,-47,-48,-50,-51,-55,123,-70,135,138,151,]),',':([11,21,22,27,28,31,32,34,35,36,37,52,53,54,69,72,73,74,75,78,79,82,83,95,96,97,98,99,104,108,121,123,],[-41,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,-75,-69,87,-56,-39,-40,-42,-43,-76,-71,105,-53,-45,-47,-48,-50,-51,-55,87,133,-70,]),'AND':([11,12,14,21,22,27,28,31,32,34,35,36,37,52,53,69,72,73,74,75,78,79,83,95,96,97,98,99,100,104,123,],[44,-69,-75,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,-75,-69,-56,44,44,-42,-43,-76,-71,-53,-45,-47,-48,-50,-51,-70,-55,-70,]),'&':([11,12,14,21,22,27,28,31,32,34,35,36,37,52,53,69,72,73,74,75,78,79,83,95,96,97,98,99,100,104,123,],[45,-69,-75,-65,-44,-46,-49,-52,-54,-64,-66,-67,-68,-75,-69,-56,45,45,-42,-43,-76,-71,-53,-45,-47,-48,-50,-51,-70,-55,-70,]),'=':([12,14,54,78,91,92,100,135,],[46,-75,86,-76,46,-75,119,119,]),'[':([12,14,52,53,78,91,92,94,137,],[47,-75,-75,84,-76,113,-75,118,144,]),'.':([12,14,52,53,78,91,92,],[48,-75,-75,85,-76,114,-75,]),'*':([12,14,21,28,31,32,34,35,36,37,52,53,69,78,79,83,98,99,100,104,123,],[-69,-75,-65,67,-52,-54,-64,-66,-67,-68,-75,-69,-56,-76,-71,-53,-50,-51,-70,-55,-70,]),'/':([12,14,21,28,31,32,34,35,36,37,52,53,69,78,79,83,98,99,100,104,123,],[-69,-75,-65,68,-52,-54,-64,-66,-67,-68,-75,-69,-56,-76,-71,-53,-50,-51,-70,-55,-70,]),'OPCOMPARE':([12,14,21,22,27,28,31,32,34,35,36,37,52,53,69,74,75,78,79,83,95,96,97,98,99,100,104,123,],[-69,-75,-65,64,-46,-49,-52,-54,-64,-66,-67,-68,-75,-69,-56,64,64,-76,-71,-53,-45,-47,-48,-50,-51,-70,-55,-70,]),'LONG':([48,85,],[79,79,]),'{':([58,145,],[93,149,]),'ENTONCES':([88,],[110,]),';':([108,109,128,151,],[-17,-16,136,154,]),'SINO':([112,124,125,134,],[-5,-5,-4,141,]),'FINSI':([112,124,125,134,146,150,],[-5,-5,-4,142,-5,153,]),'DEVOLVER':([112,125,152,155,],[-5,-4,-5,157,]),'}':([115,136,147,154,158,160,],[127,-25,-24,-27,-26,161,]),':':([120,],[132,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,40,41,],[1,70,71,]),'statement':([0,40,41,57,112,124,146,152,],[2,2,2,90,90,90,90,90,]),'expresion':([0,15,17,18,40,41,46,47,50,84,86,105,113,119,157,],[3,51,56,57,3,3,76,77,82,106,107,82,126,131,159,]),'asignacion':([0,40,41,57,112,124,146,152,],[4,4,4,4,4,4,4,4,]),'def_funcion':([0,40,41,57,112,124,146,152,],[5,5,5,5,5,5,5,5,]),'condicional':([0,40,41,57,112,124,146,152,],[6,6,6,6,6,6,6,6,]),'bucle':([0,40,41,57,112,124,146,152,],[7,7,7,7,7,7,7,7,]),'declaracion':([0,40,41,57,112,124,146,152,],[8,8,8,8,8,8,8,8,]),'declaracion_reg':([0,40,41,57,112,124,146,152,],[9,9,9,9,9,9,9,9,]),'declaracion_vec':([0,40,41,57,112,124,146,152,],[10,10,10,10,10,10,10,10,]),'expresion_and':([0,15,17,18,40,41,42,43,46,47,50,84,86,105,113,119,157,],[11,11,11,11,11,11,72,73,11,11,11,11,11,11,11,11,11,]),'name_chain':([0,15,17,18,33,40,41,42,43,44,45,46,47,50,57,64,65,66,67,68,84,86,105,112,113,119,124,146,152,157,],[12,53,53,53,53,12,12,53,53,53,53,53,53,53,91,53,53,53,53,53,53,53,53,91,53,53,91,91,91,53,]),'tipo':([0,40,41,57,80,93,112,124,132,133,143,146,152,156,],[16,16,16,16,103,116,16,16,139,103,116,16,16,116,]),'expresion_comp':([0,15,17,18,40,41,42,43,44,45,46,47,50,84,86,105,113,119,157,],[22,22,22,22,22,22,22,22,74,75,22,22,22,22,22,22,22,22,22,]),'expresion_add':([0,15,17,18,40,41,42,43,44,45,46,47,50,64,65,66,84,86,105,113,119,157,],[27,27,27,27,27,27,27,27,27,27,27,27,27,95,96,97,27,27,27,27,27,27,]),'expresion_mult':([0,15,17,18,40,41,42,43,44,45,46,47,50,64,65,66,84,86,105,113,119,157,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'factor':([0,15,17,18,33,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[31,31,31,31,69,31,31,31,31,31,31,31,31,31,31,31,31,98,99,31,31,31,31,31,31,]),'valor':([0,15,17,18,33,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operador_unario':([0,15,17,18,33,40,41,42,43,44,45,46,47,50,64,65,66,67,68,84,86,105,113,119,157,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'varios_name':([16,87,116,],[55,109,128,]),'tipo_vector':([20,117,],[59,129,]),'lista_expresiones':([50,105,],[81,122,]),'statements1':([57,112,124,146,152,],[89,125,134,150,155,]),'lista_args':([80,133,],[102,140,]),'blq_registro':([93,143,156,],[115,147,158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement FINPARRAFO statements','statements',3,'p_statements','OGSyntax.py',28),
  ('statements -> expresion FINPARRAFO statements','statements',3,'p_statements','OGSyntax.py',29),
  ('statements -> <empty>','statements',0,'p_statements','OGSyntax.py',30),
  ('statements1 -> statement FINPARRAFO statements1','statements1',3,'p_statements1','OGSyntax.py',35),
  ('statements1 -> <empty>','statements1',0,'p_statements1','OGSyntax.py',36),
  ('statement -> asignacion','statement',1,'p_statement','OGSyntax.py',41),
  ('statement -> def_funcion','statement',1,'p_statement','OGSyntax.py',42),
  ('statement -> condicional','statement',1,'p_statement','OGSyntax.py',43),
  ('statement -> bucle','statement',1,'p_statement','OGSyntax.py',44),
  ('statement -> declaracion','statement',1,'p_statement','OGSyntax.py',45),
  ('statement -> declaracion_reg','statement',1,'p_statement','OGSyntax.py',46),
  ('statement -> declaracion_vec','statement',1,'p_statement','OGSyntax.py',47),
  ('statement -> <empty>','statement',0,'p_statement','OGSyntax.py',48),
  ('declaracion -> tipo NAME = expresion','declaracion',4,'p_declaracion','OGSyntax.py',51),
  ('declaracion -> tipo varios_name','declaracion',2,'p_declaracion','OGSyntax.py',52),
  ('varios_name -> NAME , varios_name','varios_name',3,'p_varios_name','OGSyntax.py',71),
  ('varios_name -> NAME','varios_name',1,'p_varios_name','OGSyntax.py',72),
  ('tipo -> ENTERO','tipo',1,'p_tipo','OGSyntax.py',81),
  ('tipo -> REAL','tipo',1,'p_tipo','OGSyntax.py',82),
  ('tipo -> BOOLEANO','tipo',1,'p_tipo','OGSyntax.py',83),
  ('tipo -> CARACTER','tipo',1,'p_tipo','OGSyntax.py',84),
  ('tipo -> NAME','tipo',1,'p_tipo','OGSyntax.py',85),
  ('declaracion_reg -> REGISTRO NAME { blq_registro }','declaracion_reg',5,'p_declaracion_reg','OGSyntax.py',91),
  ('blq_registro -> tipo varios_name ; FINPARRAFO blq_registro','blq_registro',5,'p_blq_registro','OGSyntax.py',99),
  ('blq_registro -> tipo varios_name ;','blq_registro',3,'p_blq_registro','OGSyntax.py',100),
  ('blq_registro -> VECTOR tipo_vector NAME [ NUMINTEGER ] ; FINPARRAFO blq_registro','blq_registro',9,'p_blq_registro','OGSyntax.py',101),
  ('blq_registro -> VECTOR tipo_vector NAME [ NUMINTEGER ] ;','blq_registro',7,'p_blq_registro','OGSyntax.py',102),
  ('tipo_vector -> ENTERO','tipo_vector',1,'p_tipo_vector','OGSyntax.py',127),
  ('tipo_vector -> REAL','tipo_vector',1,'p_tipo_vector','OGSyntax.py',128),
  ('tipo_vector -> BOOLEANO','tipo_vector',1,'p_tipo_vector','OGSyntax.py',129),
  ('tipo_vector -> CARACTER','tipo_vector',1,'p_tipo_vector','OGSyntax.py',130),
  ('declaracion_vec -> VECTOR tipo_vector NAME [ NUMINTEGER ]','declaracion_vec',6,'p_declaracion_vec','OGSyntax.py',134),
  ('asignacion -> name_chain = expresion','asignacion',3,'p_asignacion','OGSyntax.py',162),
  ('asignacion -> name_chain [ expresion ] = expresion','asignacion',6,'p_asignacion','OGSyntax.py',163),
  ('def_funcion -> FUNCION NAME ( lista_args ) : tipo FINPARRAFO { FINPARRAFO statements1 DEVOLVER expresion FINPARRAFO }','def_funcion',15,'p_def_funcion','OGSyntax.py',258),
  ('lista_args -> tipo NAME , lista_args','lista_args',4,'p_lista_args','OGSyntax.py',274),
  ('lista_args -> tipo NAME','lista_args',2,'p_lista_args','OGSyntax.py',275),
  ('lista_args -> <empty>','lista_args',0,'p_lista_args','OGSyntax.py',276),
  ('expresion -> expresion OR expresion_and','expresion',3,'p_expresion','OGSyntax.py',290),
  ('expresion -> expresion | expresion_and','expresion',3,'p_expresion','OGSyntax.py',291),
  ('expresion -> expresion_and','expresion',1,'p_expresion','OGSyntax.py',292),
  ('expresion_and -> expresion_and AND expresion_comp','expresion_and',3,'p_expresion_and','OGSyntax.py',300),
  ('expresion_and -> expresion_and & expresion_comp','expresion_and',3,'p_expresion_and','OGSyntax.py',301),
  ('expresion_and -> expresion_comp','expresion_and',1,'p_expresion_and','OGSyntax.py',302),
  ('expresion_comp -> expresion_comp OPCOMPARE expresion_add','expresion_comp',3,'p_expresion_comp','OGSyntax.py',310),
  ('expresion_comp -> expresion_add','expresion_comp',1,'p_expresion_comp','OGSyntax.py',311),
  ('expresion_add -> expresion_mult + expresion_add','expresion_add',3,'p_expresion_add','OGSyntax.py',329),
  ('expresion_add -> expresion_mult - expresion_add','expresion_add',3,'p_expresion_add','OGSyntax.py',330),
  ('expresion_add -> expresion_mult','expresion_add',1,'p_expresion_add','OGSyntax.py',331),
  ('expresion_mult -> expresion_mult * factor','expresion_mult',3,'p_expresion_mult','OGSyntax.py',342),
  ('expresion_mult -> expresion_mult / factor','expresion_mult',3,'p_expresion_mult','OGSyntax.py',343),
  ('expresion_mult -> factor','expresion_mult',1,'p_expresion_mult','OGSyntax.py',344),
  ('factor -> ( expresion )','factor',3,'p_factor','OGSyntax.py',364),
  ('factor -> valor','factor',1,'p_factor','OGSyntax.py',365),
  ('factor -> NAME ( lista_expresiones )','factor',4,'p_factor','OGSyntax.py',366),
  ('factor -> operador_unario factor','factor',2,'p_factor','OGSyntax.py',367),
  ('lista_expresiones -> expresion , lista_expresiones','lista_expresiones',3,'p_lista_expresiones','OGSyntax.py',390),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','OGSyntax.py',391),
  ('lista_expresiones -> <empty>','lista_expresiones',0,'p_lista_expresiones','OGSyntax.py',392),
  ('operador_unario -> -','operador_unario',1,'p_operador_unario','OGSyntax.py',407),
  ('operador_unario -> NOT','operador_unario',1,'p_operador_unario','OGSyntax.py',408),
  ('operador_unario -> !','operador_unario',1,'p_operador_unario','OGSyntax.py',409),
  ('operador_unario -> +','operador_unario',1,'p_operador_unario','OGSyntax.py',410),
  ('valor -> NUMREAL','valor',1,'p_valor','OGSyntax.py',417),
  ('valor -> NUMINTEGER','valor',1,'p_valor','OGSyntax.py',418),
  ('valor -> CIERTO','valor',1,'p_valor','OGSyntax.py',419),
  ('valor -> FALSO','valor',1,'p_valor','OGSyntax.py',420),
  ('valor -> CARACTERC','valor',1,'p_valor','OGSyntax.py',421),
  ('valor -> name_chain','valor',1,'p_valor','OGSyntax.py',422),
  ('valor -> name_chain [ expresion ]','valor',4,'p_valor','OGSyntax.py',423),
  ('valor -> name_chain . LONG','valor',3,'p_valor','OGSyntax.py',424),
  ('condicional -> SI expresion FINPARRAFO ENTONCES FINPARRAFO statements1 SINO FINPARRAFO statements1 FINSI','condicional',10,'p_condicional','OGSyntax.py',492),
  ('condicional -> SI expresion FINPARRAFO ENTONCES FINPARRAFO statements1 FINSI','condicional',7,'p_condicional','OGSyntax.py',493),
  ('bucle -> MIENTRAS expresion statements1 FINMIENTRAS','bucle',4,'p_bucle','OGSyntax.py',502),
  ('name_chain -> NAME','name_chain',1,'p_name_chain','OGSyntax.py',511),
  ('name_chain -> name_chain . NAME','name_chain',3,'p_name_chain','OGSyntax.py',512),
]
